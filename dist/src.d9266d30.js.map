{"version":3,"sources":["index.js"],"names":["refs","timerContainer","document","querySelector","days","hours","mins","secs","CountdownTimer","targetDate","getTime","currentDate","Date","now","setInterval","numbers","initTime","createMarkupTimer","deltaTime","Math","floor","textContent","timer1","start","console","log"],"mappings":";AAwDA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAxDA,IAAMA,EAAO,CACTC,eAAgBC,SAASC,cAAc,YACvCC,KAAMF,SAASC,cAAc,uBAC7BE,MAAOH,SAASC,cAAc,wBAC9BG,KAAMJ,SAASC,cAAc,uBAC7BI,KAAML,SAASC,cAAc,wBAI3BK,EAAAA,WAC0B,SAAA,EAAA,GAAdC,IAAAA,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAEnBA,KAAAA,WAAaA,EAAWC,UACxBC,KAAAA,YAAc,KA2C3B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAxCI,MAAA,WAAQ,IAAA,EAAA,KACCA,KAAAA,YAAcC,KAAKC,MACpB,KAAKF,cAAgB,KAAKF,YAG9BK,YAAY,WACFC,IAAAA,EAAU,EAAKC,WACrB,EAAKC,kBAAkBF,IACxB,OAgCX,CAAA,IAAA,WA5BI,MAAA,WACSJ,KAAAA,YAAcC,KAAKC,MAClBK,IAAAA,EAAY,KAAKT,WAAa,KAAKE,YAMlC,MAAA,CAAEP,KAJIe,KAAKC,MAAMF,EAAa,OAItBb,MAHDc,KAAKC,MAAOF,EAAa,MAAyB,MAG1CZ,KAFTa,KAAKC,MAAOF,EAAa,KAAoB,KAE9BX,KADfY,KAAKC,MAAOF,EAAa,IAAc,QAqB5D,CAAA,IAAA,oBAhBI,MAAA,SAA+C,GAA3Bd,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KACnCP,EAAKI,KAAKiB,YAAcjB,EAAO,GAASA,IAAAA,OAAAA,GAASA,EACjDJ,EAAKK,MAAMgB,YAAchB,EAAQ,GAASA,IAAAA,OAAAA,GAAUA,EACpDL,EAAKM,KAAKe,YAAcf,EAAO,GAASA,IAAAA,OAAAA,GAASA,EACjDN,EAAKO,KAAKc,YAAcd,EAAO,GAASA,IAAAA,OAAAA,GAASA,MAYzD,EA/CMC,GAwCAc,EAAS,IAAId,EAAe,CAC9BC,WAAY,IAAIG,KAAK,iCAIzBU,EAAOC,QAEPC,QAAQC,IAAIH","file":"src.d9266d30.js","sourceRoot":"../src","sourcesContent":["const refs = {\n    timerContainer: document.querySelector(\"#timer-1\"),\n    days: document.querySelector(\"[data-value='days']\"),\n    hours: document.querySelector(\"[data-value='hours']\"),\n    mins: document.querySelector(\"[data-value='mins']\"),\n    secs: document.querySelector(\"[data-value='secs']\")\n};\n\n\nclass CountdownTimer {\n    constructor({ targetDate }) {\n\n        this.targetDate = targetDate.getTime();\n        this.currentDate = null;\n    }\n\n    start() {\n        this.currentDate = Date.now();\n        if (this.currentDate === this.targetDate) {\n            return;\n        }\n        setInterval(() => {\n            const numbers = this.initTime();\n            this.createMarkupTimer(numbers);\n        }, 1000);\n    };\n\n\n    initTime() {\n        this.currentDate = Date.now();\n        const deltaTime = this.targetDate - this.currentDate;\n\n        const days = Math.floor(deltaTime / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((deltaTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        const mins = Math.floor((deltaTime % (1000 * 60 * 60)) / (1000 * 60));\n        const secs = Math.floor((deltaTime % (1000 * 60)) / 1000);\n        return { days, hours, mins, secs };\n    };\n\n\n    createMarkupTimer({ days, hours, mins, secs }) {\n        refs.days.textContent = days < 10 ? `0${days}` : days;\n        refs.hours.textContent = hours < 10 ? `0${hours}` : hours;\n        refs.mins.textContent = mins < 10 ? `0${mins}` : mins;\n        refs.secs.textContent = secs < 10 ? `0${secs}` : secs;\n    }\n\n};\n\nconst timer1 = new CountdownTimer({\n    targetDate: new Date(\"September 20, 2021 00:00:00\"),\n\n});\n\ntimer1.start();\n\nconsole.log(timer1);\n\n\n\n\n\n"]}